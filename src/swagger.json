{
  "openapi": "3.0.0",
  "info": {
    "title": "User registration documentation",
    "description": "Is an api for registering and listing users",
    "version": "1.0.0",
    "contact": {
      "email:": "dionathan.cordova@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": "Users Management"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create new user",
        "description": "Create new user and return it",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Dionathan",
                  "email": "dionathan.cordova@gmail.com"
                },
                "required": ["name", "email"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "List all users",
        "description": "Returns all users if the user is an administrator",
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "example": "db5894f3-b078-4b2a-8351-eca4dd9efbb9"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User is not an administrator or does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "description": "Return a user",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "example": "db5894f3-b078-4b2a-8351-eca4dd9efbb9"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/admin": {
      "patch": {
        "tags": ["Users"],
        "summary": "Set user to admin",
        "description": "Turn a user in admin and return him updated",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "example": "db5894f3-b078-4b2a-8351-eca4dd9efbb9"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "example": {
          "error": "Error Message"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "update_at": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "db5894f3-b078-4b2a-8351-eca4dd9efbb9",
          "name": "Dionathan CÃ³rdova",
          "email": "dionathan.cordova@gmail.com",
          "created_at": "2021-03-20T13:00:58.537Z",
          "update_at": "2021-03-20T13:00:58.537Z",
          "admin": "false"
        }
      }
    }
  }
}
